@page "/register/{eventId:int}"
@inject Services.IRegistrationService RegistrationService
@inject NavigationManager NavigationManager
@using Course4_EventEase.Models

<h3>Event Registration</h3>

<EditForm Model="@registrationModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Name:</label>
        <InputText @bind-Value="registrationModel.Name" class="form-control" />
    </div>

    <div class="form-group">
        <label>Email:</label>
        <InputText @bind-Value="registrationModel.Email" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegistrationModel registrationModel = new RegistrationModel();

    [Parameter]
    public int EventId { get; set; }

    protected override void OnParametersSet()
    {
        registrationModel.EventId = EventId;
    }

    private async void HandleValidSubmit()
    {
        var registrationSuccessful = await RegistrationService.RegisterUser(registrationModel);

        if (registrationSuccessful)
        {
            NavigationManager.NavigateTo("/"); // Redirect to the home page or a success page
        }
        else
        {
            // Handle registration failure (e.g., display an error message)
            // You could add a property to the component to store an error message
            // and display it in the markup.
        }
    }
}